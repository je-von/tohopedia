# directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

scalar Date

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  phone: String!
  gender: String!
  dob: Date!
  profilePic: String!
  role: String!
  isSuspended: Boolean!
  shop: Shop! @goField(forceResolver: true)
}

type Query {
  user(id: ID, email: String, password: String): User!
  users: [User!]!

  # shop(id: ID, userID: ID): Shop!
  # shops: [Shop!]!
}

type Mutation {
  createUser(input: NewUser!): User!
  updateUser(id: ID!, input: NewUser!): User!
  toggleSuspend(id: ID!): User! # block / unblock
  login(email: String!, password: String!): User!

  # createShop(input: NewShop!, userID: ID!): Shop!
  # updateShop(id: ID!, input: NewShop!): Shop!
}

input NewUser {
  name: String!
  email: String!
  password: String!
  phone: String!
  gender: String!
  dob: Date!
  profilePic: String!
  role: String!
}
